[{"title":"Hexo安装-keep主题-部署github-文档","url":"/0/","content":"转载声明本文档转载keep主题官方文档，稍加修改。官方文档 \n\n\n安装node.js安装git安装Hexo\n新建文件夹Hexo\n打开Hexo文件夹，在其内部鼠标右键打开Git Bash Here 并输入以下命令。npm install -g hexo-cli\nhexo init\n\n安装主题git clone https:&#x2F;&#x2F;github.com&#x2F;XPoet&#x2F;hexo-theme-keep themes&#x2F;keep\n配置主题\n打开Hexo根目录_config.yml配置文件，修改主题为keep\n\ntheme: keep\n配置指南Keep 主题图文配置指南，左侧目录对应着主题配置文件 _config.yml 里面的配置项，方便查阅。\n基本信息：网站标题-作者昵称-网站域名base_info:  title: Keep Theme  author: Keep Team  url: \n\n请在该配置项里正确填写你网站的基本信息。\n\ntitle 网站标题（将显示在网站头部，如下图）\n\nauthor 作者昵称（将显示在网站底部和文章内容页，如下图）\n\n网站底部\n文章内容页\n\n\nurl 网站域名（将用于在文章内容页的版权信息模块正确拼接文章链接，如下图）\n\n\n配置网站的基本样式style:  # Theme primary color  primary_color: &quot;#0066CC&quot;  # Avatar (You can use local image or image external link)  avatar: /images/avatar.svg  # Favicon (You can use local image or image external link)  favicon: /images/logo.svg  # Article image align position, value: left | center  article_img_align: left  # Left side width  left_side_width: 260px  # Content area max width  content_max_width: 920px  # Mouse hover  hover:    shadow: true # shadow effect when the mouse hover    scale: true # scale effect when the mouse hover  # First screen  first_screen:    enable: true    background_img: /images/bg.svg # You can use local image or image external link    description: Keep writing and Keep loving.  # Scroll style settings  scroll:    progress_bar:      enable: true    percent:      enable: true\n\nstyle 该配置项用于配置网站的基本样式。\n设置网站主题色primary_color\n设置网站主题色，支持 rgb、rgba、十六进制等颜色格式，例如：rgb(0, 102, 204)、rgba(0, 102, 204, 0.8)、#0066cc。建议使用 Web 安全色。\n设置作者头像avatar\n设置作者头像，将显示在文章内容页，如下图。你可以使用本地图片（即存储 keep/source/images/ 路径下的图片）或图片外链 URL。写法参考：\n\n本地图片avatar: /images/avatar.svg\n图片外链avatar: https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg\n\n设置网站logofavicon\n设置网站 favicon 图标，你可以使用本地图片（即存储 keep/source/images/ 路径下的图片）或图片外链 URL。\n设置文章内容页的图片排列位置article_img_align\n设置文章内容页的图片排列位置，默认 left，可选：left（靠左）、center（居中）。\n设置左侧目录模块的宽度left_side_width\n设置左侧 TOC 目录模块的宽度。一般情况下，你无需修改。如需设置，请保持单位为 px。\n\n设置内容区域的最大宽度content_max_width\n设置内容区域的最大宽度。一般情况下，你无需修改。如需设置，请保持单位为 px。\n\n\n\n设置鼠标悬浮时的样式hover\n设置鼠标悬浮时的样式（主页文章块、TOC 目录块、按钮等模块），可分别开启 shadow 和 scale 效果。\n\nshadow 阴影效果\nscale 缩放效果\n\n开启主题首屏first_screen\nKeep 主题 v3.0.0 新增的首屏模块，开启后将显示在网站首页。\n\nenable 是否开启首屏\n\nbackground_img 首屏背景图片，可使用 本地图片 或 图片外链 URL\n\ndescription 首屏描述\n\n开启首屏的效果\n\n不开启首屏的效果\n\n\n设置页面滚动时的样式。scroll\n设置页面滚动时的样式。\n\nprogress_bar 页面滚动时在网站顶部显示滚动进度条\n\npercent 页面滚动时在网站右下角显示滚动百分比\n\n\n设置第三方社交链接social_contact:  enable: false  links:    github:               # your GitHub URL    weixin:               # your WeChat QR-Code URL    qq:                   # your QQ QR-Code URL    weibo:                # your WeiBo URL    zhihu:                # your ZhiHu URL    twitter:              # your twitter URL    facebook:             # your facebook URL    email:                # your email\n\n设置第三方社交链接。\n::: warning注意：social_contact 仅在首屏开启状态下才生效！:::\n\n如果要更改图标或添加其他第三方链接，例如：添加 Instagram\n\n在 Font Awesome 搜索 Instagram 图标。\n\n复制图标名（如上图），添加到主题配置文件 _config.yml 的 social_contact.links 配置项里面。\n\n\nsocial_contact:enable: falselinks:  instagram: https://www.instagram.com/xxxxxxxx\n\n\n导航menu:  Home: /  Archives: /archives  # Categories: /categories  # Tags: /tags  # Links: /links  # About: /about  # ...\n\n网站头部导航菜单，如需新增导航菜单，按上面格式填写，同时需要创建相对应的 Hexo 页面。\n\nHexo 项目并没有 categories（分类）、tags（标签）、about（关于）、links（友链）等页面，需要自己手动创建。\n以创建「 about（关于）」页面为例：\n\n在 Hexo 项目根目录下执行命令 hexo new page about ，即可在 source 目录下生成 about 文件夹。\n$ hexo new page about\n在 Keep 主题配置文件 _config.yml 的 menu 配置项下添加 about。\nmenu:  Home: /  Archives: /archives  # Categories: /categories  # Tags: /tags  # Links: /links  About: /about\n打开 Hexo 项目下 /source/about/index.md 文件，填写 adout 页面的内容。支持 Markdown 和 HTML 格式；  \n参考如下：\n---title: aboutdate: 2020-03-19 14:59:53comment: true---## About meXPoet「 Keep core developer 」............\n::: tipcomment: true 表示该页面开启评论功能。:::\n::: danger创建页面时自动生成的 title 属性不要修改！不要删除！例如：title: about 不能修改！不能删除！:::\n\n\n如果要实现在导航栏点击菜单时跳转到第三方网站，只需把配置项的值填写为第三方网站的 URL 即可。例如：在头部导航栏配置跳转到 BaiDu 网站的菜单\nmenu:  BaiDu: https://www.baidu.com/\n\n\n文章块底部的标签和分类信息显示home_article:  category:    enable: false     # show category in home page article block    limit: 3          # max number of categories shown in home page article block  tag:    enable: false     # show tags in home page article block    limit: 5          # max number of tags shown in home page article block\n该配置项用于设置首页文章块底部的标签和分类信息显示。\n\ncategory 文章分类\n\ntag 文章标签\n\nlimit 限制显示的个数\n\n效果图\n\n不开启效果\n\n开启效果\n\n\n\n\n设置是否显示文章字数统计、阅读时长和作者标识。post:  # Post word count  # Dependencies: hexo-wordcount (npm install hexo-wordcount)  # See: https://github.com/willin/hexo-wordcount  word_count:    enable: false    wordcount: false  # word count, one article    min2read: false   # time to read, one article  # Author label  author_label:    enable: true    auto: true  # if true, show Lv1, Lv2, Lv3... , If false, show custom label    # label array item can be one or more    custom_label_list: [ &quot;Trainee&quot;, &quot;Engineer&quot;, &quot;Architect&quot;, &quot;CTO&quot;, &quot;BOSS&quot; ]\n\n该配置项用于设置是否显示文章字数统计、阅读时长和作者标识。\nword_count如果要开启文章字数统计和阅读时长，需在 Hexo 项目根目录下安装依赖 hexo-wordcount。\nnpm install hexo-wordcount\n\n\nwordcount 文章字数统计\nmin2read 文章阅读时长\n\nauthor_label设置文章内容页的作者标识，目前有两种方案：\n\nauto 自动生成 Lv1、Lv2、Lv3 ……，判断依据为文章数量。\n\ncustom_label_list 自定义标识列表，数组项可以 一个 或 多个，匹配的依据是按文章数量。\n\n\n  格式参考：\n\n一个数组项 [&quot;前端鼓励师&quot;]\n多个数组项 [&quot;实习生&quot;, &quot;工程师&quot;, &quot;架构师&quot;]\n\n代码复制功能code_copy:  enable: true  style: default        # values: default | mac\n\n该配置项用于设置代码复制功能，开启后可一键复制代码到剪贴板。\n\nenable 是否开启。\n\nstyle 设置开启代码复制功能后代码块的样式，可选 default 和 mac。\n\ndefault 效果图\n\nmac 效果图\n\n\n\n\n目录功能toc:  enable: false  # Automatically add list number to toc.  number: false  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.  expand_all: false  # If true, open TOC every time when you enter the article page  init_open: false\n\n该配置项用于设置文章TOC目录结构，非常实用的功能，可以快速查看文章目录结构和跳转，建议开启。\n\n\nnumber 给目录结构自动加上数字编号\n\nnumber: false\n\nnumber: true\n\n\n\nexpand_all 展开所有目录结构\n\nexpand_all: true 自动展开所有的目录结构\nexpand_all: false 边滚动页面边展开对应的位置的目录\n\n\ninit_open 打开文章页时是否自动打开 TOC 目录结构 \n\n\n显示文章版权信息copyright_info:  enable: true\n\n该配置项用于开启文章内容页的文章版权信息模块。\n\n设置网站计数website_count:  # busuanzi  # See: http://ibruce.info/2015/04/04/busuanzi/  busuanzi_count:    enable: false    site_uv: false    site_pv: false    page_pv: false\n\n该配置项用于设置网站计数，Keep 主题内置不蒜子计数，无需额外配置，直接选择你要开启的计数项即可。\n\nsite_uv 网站访问人数（显示在底部）\n\nsite_pv 网站总访问量（显示在底部）\n\npage_pv 文章阅读次数（显示在文章内容页）\n\n\n搜索功能local_search:  enable: false  preload: false     # Preload the search data when the page loads\n\n该配置项用于设置网站搜索功能，非常实用，建议开启。开启后，头部导航栏右侧将出现搜索按钮。\n\n搜索功能配置流程：\n\n在 Hexo 项目根目录下安装插件 hexo-generator-searchdb。\nnpm install hexo-generator-searchdb\n在 Hexo 配置文件 _config.yml 里添加如下配置项。\n# Search## See: https://github.com/theme-next/hexo-generator-searchdbsearch:  path: search.json  field: post  content: true  format: striptags\n主题配置搜索 \nlocal_search:  enable: true     preload: true\n:::enable 配置项的值设为 true。代表开启搜索。\npreload配置项的值设为 true。代表开启搜索。预加载搜索数据。:::\n\n\n全站文章搜索效果图：\n\n评论系统comment:  enable: false  use: valine  # values: valine | gitalk | twikoo  # Valine  # See: https://github.com/xCss/Valine  valine:    appid:                # your leancloud application appid    appkey:               # your leancloud application appkey    placeholder:          # your placeholder  # Gitalk  # See: https://github.com/gitalk/gitalk  gitalk:    github_id:             # GitHub repo owner    repository:            # Repository name to store issues    client_id:             # GitHub Application Client ID    client_secret:         # GitHub Application Client Secret  # Twikoo  # See: https://github.com/imaegoo/twikoo  twikoo:    env_id:                # Tencent Cloud environment id    region:                # environment region. If select Guangzhou, fill in &quot;ap-guangzhou&quot;.\n\n该配置项用于开启和设置主题的评论系统。\nuseuse: valine  # values: valine | gitalk | twikoo\n配置使用哪款评论系统。目前主题内置 Valine、Gitalk 和 Twikoo，你可以使用其他一款。\nValineValine 诞生于 2017 年 8 月 7 日，是一款基于 LeanCloud 的快速、简洁且高效的无后端评论系统。\n详情查看：\n\nhttps://github.com/xCss/Valine/\nhttps://valine.js.org/\n\n在 Keep 中如何使用：\n\n请先 登录 或 注册 LeanCloud，进入控制台后点击左下角创建应用。\n\n\n应用创建好以后，进入刚刚创建的应用，选择左下角的设置 &gt; 应用Key，然后就能看到你的 APP ID 和 APP Key 了。\n\n\n在 Keep 主题配置文件填写必要参数信息（APP ID、APP Key 等），示例如下。\nvaline:  appid: ih2nzxxxxxxxxxxxxxxxxxxxxxx  appkey: gdf6666666666666666666666666  placeholder: 😜 尽情吐槽吧~\n\n\nappid 必填。\nappkey 必填。\nplaceholder 可填，表示评论框的在还没输入内容时的显示的信息。\n\n\nValine 评论插件效果图。\n\n\n\nGitalkGitalk，一个基于 Github Issue 和 Preact 开发的评论插件。\n详情查看：\n\nhttps://github.com/gitalk/gitalk\nhttps://gitalk.github.io/\n\n在 Keep 中如何使用：\n\n新建 GitHub OAuth App注册或登录 GitHub，创建新的 OAuth App，其中 Homepage URL 和 Authorization callback URL 均填写自己的域名即可。\nOAuth App 创建成功后，把 Client ID 和 Client Secret 保存起来，下面要用到。\n\n\n新建 GitHub 仓库注册或登录 GitHub，创建一个新的仓库（repository），并打开 Issues（自己手动增加一个 Issue，内容随便填写，即可打开），用于存储评论内容。\n\n把自己的 GitHub 用户名、仓库名 、OAuth App 的 Client ID 、Client Secret 分别填写在主题配置文件里，如下示例。\ngitalk:  github_id: XPoet  repository: hexo-site-comments  client_id: cdfffffffffffffffffffff  client_secret: f4b55555555555555555555555555555\nGitalk 评论插件效果图。\n\n\nTwikooTwikoo，一个简洁、安全、免费的静态网站评论系统，基于腾讯云开发。\n详情查看：\n\nhttps://github.com/imaegoo/twikoo\nhttps://twikoo.js.org/\n\n在 Keep 中如何使用：\n如果您打算部署到一个现有的云开发环境，请直接从第 3 步开始。\n\n进入云开发CloudBase活动页面，滚动到“新用户专享”部分，选择适合的套餐（一般 0 元套餐即可），点击“立即购买”，按提示创建好环境。::: tip 提示\n\n\n推荐创建上海环境。如选择广州环境，需配置 region: ap-guangzhou\n环境名称自由填写\n推荐选择计费方式包年包月，套餐版本基础班 1，超出免费额度不会收费\n如果提示选择“应用模板”，请选择“空模板”:::\n\n\n进入云开发控制台\n\n进入环境-登录授权，启用“匿名登录”\n\n进入环境-安全配置，将网站域名添加到“WEB安全域名”\n\n进入环境-云函数，点击“新建云函数”\n\n函数名称请填写：twikoo，创建方式请选择：空白函数，运行环境请选择：Nodejs 10.15，函数内存请选择：128MB，点击“下一步”\n\n清空输入框中的示例代码，复制以下代码、粘贴到“函数代码”输入框中，点击“确定”\nexports.main = require(&#x27;twikoo-func&#x27;).main\n创建完成后，点击“twikoo”进入云函数详情页，进入“函数代码”标签，点击“文件 - 新建文件”，输入 package.json，回车\n\n复制以下代码、粘贴到代码框中，点击“保存并安装依赖”\n&#123; &quot;dependencies&quot;: &#123; &quot;twikoo-func&quot;: &quot;1.2.0&quot; &#125; &#125;\n在 Keep 主题配置文件里填写环境 ID env_id\ntwikoo:  env_id: xxxx-xxxx..........  region:  \n\n如果选择了广州环境，需把 region 的值填写为 ap-guangzhou，否则 region 为空即可。\ntwikoo:  region: ap-guangzhou\nTwikoo 评论插件效果图。\n\n\n\n订阅网站rss:  enable: false\n该配置项用于开启 RSS 订阅功能。\n开启流程：\n\n在 Hexo 项目根目录下安装插件 hexo-generator-feed。\nnpm install hexo-generator-feed\n在 Hexo 配置文件 _config.yml 增加如下配置项。\n# Feed Atom# npm install hexo-generator-feedfeed:  type: atom  path: atom.xml  limit: 20\n在 Keep 主题配置文件 _config.yml 开启 RSS。   \nrss:  enable: true\nRSS 订阅功能开启后，将会在右下角工具按钮组里面显示RSS 按钮。\n\n\n\n开启图片懒加载lazyload:  enable: false  ```  该配置项用于开启图片懒加载。  开启后，打开页面时不会加载所有图片，当视窗滚动到图片位置才加载对应的图片资源。效果图：![image](https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/keep-docs/image.4xw0l2pjrbo0.png)::: tip当图片过多时，开启懒加载功能，能有效提高页面加载速度！:::## cdn   ```ymlcdn:  enable: false  ```  该配置项用于开启部分主题资源（JS 文件、字体文件等）的 CDN 加速功能。::: tip CDN 原理Keep 的 CDN 加速原理是使用 jsDelivr 来加速托管在 NPM 上的 [hexo-theme-keep](https://www.npmjs.com/package/hexo-theme-keep) 包的资源。:::- 如果你的 Hexo 博客部署在 **GitHub Pages**（服务器在国外），**建议**你开启 CDN，打开页面会有较快的加载速度。  - JS 资源 CDN    ![image](https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/keep-docs/image.6y8hk0j82lk0.png)  - 字体文件 CDN    ![image](https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/keep-docs/image.3jfuinu7t7o0.png)  - 如果博客部署在 **Gitee Pages**、**阿里云**、**腾讯云**等国内服务器，则**不建议**开启 CDN。## 开启主题的 PJAX 功能```ymlpjax:  enable: false  ```  该配置项用于开启主题的 PJAX 功能，带来单页应用的体验。::: tipPJAX 的工作原理是通过 Ajax 从服务器获取 HTML，并用 Ajax 请求得到 HTML 替换页面上容器的内容，然后使用 pushState 更新浏览器的当前 URL，而无需重新加载页面的布局或任何资源（JS，CSS），从而提供快速，完整页面加载的外观。但实际上它只是 Ajax 和 pushState。:::PJAX 开启后，点击页面跳转时，网页顶部会出现彩色进度条。## 设置网站底部的信息展示```ymlfooter:  since: 2020      # the starting year of your website, Can be null  icp:             # ICP record number of your website, Can be null\n\n该配置项用于设置网站底部的信息展示。\n\nsince 设置网站起始年份，可以为空。\nicp 设置网站 ICP 备案编号，可以为空。\n\n\n进阶使用创建页面Hexo 项目初始状态下并没有 categories（分类）、tags（标签）、links（友链）、about（关于）等页面，需要自己手动创建。\n以创建「about（关于）」页为例：\n\n在 Hexo 项目根目录下使用如下命令，即可创建 about 页面。\n$ hexo new page about\n创建成功后，打开 Hexo 项目根目录下 hexo/source/about/index.md 文件，即可填写 about 页面的内容。支持 Markdown 和 HTML 格式。\n::: tipcomment: true 表示该页面开启评论功能。:::\n参考如下示例：\n---title: aboutdate: 2020-03-19 14:59:53comment: true---# About me&lt;div style=&quot;color: red;&quot;&gt;About me&lt;/div&gt;\n在主题配置文件 _config.yml 中启用 about 导航菜单。\nmenu:  Home: /  About: /about  # ...\n\n其他页面的创建方式跟「about（关于）」页面类似，此处不再赘述。\n文章顶置要实现顶置的文章，需在文章页添加 sticky 属性，sticky 值越大，顶置的文章越靠前，参考如下。\n---title: Keep 主题使用指南date: 2020-04-07 21:55:14tags: [Hexo]categories: [Hexo]sticky: 999---\n\n\n数学公式如果要在文章中显示数学公式，可以使用插件 **hexo-filter-mathjax**。  \n配置流程：\n\n在 Hexo 项目根目录下安装插件 hexo-filter-mathjax。\n$ cd hexo-site$ npm install hexo-filter-mathjax\n在 Hexo 配置文件 _config.yml 增加如下配置。\nmathjax:  tags: none               # or &#x27;ams&#x27; or &#x27;all&#x27;  single_dollars: true     # enable single dollar signs as in-line math delimiters  cjk_width: 0.9           # relative CJK char width  normal_width: 0.6        # relative normal (monospace) width  append_css: true         # add CSS to every page  every_page: false        # if true, every page will be rendered by mathjax regardless the `mathjax` setting in Front-matter of each article\n在文章页添加 mathjax: true 属性，至此，就可以在该页面中写公式了。\n示例：\n---title: MathJax Testdate: 2020-09-12 16:02:07tags: MathJaxcategories: MathJaxmathjax: true---$$i\\hbar\\frac&#123;\\partial&#125;&#123;\\partial t&#125;\\psi=-\\frac&#123;\\hbar^2&#125;&#123;2m&#125;\\nabla^2\\psi+V\\psi$$\n\n效果图：\n\n\n友链样式Keep 主题对友链（links）页面进行了样式优化，你只需按如下教程，便可得到漂亮的友链列表，如下图。\n\n\n创建友链（links）页面，在你的 Hexo 项目根目录下使用如下命令即可自动创建。\n$ hexo new page links\n\n::: warning 注意source/links/index.md 文件的 title 属性不要修改！友链样式根据 title: links 来匹配！\n---title: linksdate: 2020-05-13 14:16:07---\n:::\n\n在 Keep 主题配置文件 _config.yml 的 menu 配置项里面启用 links。\nmenu:  Home: /  Links: /links  # ......\n在你的 Hexo 项目的 source 文件夹里增加 _data 文件夹。::: tip如果已经有了 _data 文件夹，则忽略这一步。:::\n\n在 _data 文件夹里新建 links.yml 文件。\n\n在 links.yml 文件里按如下格式增加你的友链。\n- name: XPoet  link: https://xpoet.cn/  description: 所有命运的馈赠，早已在暗中标好价格。  avatar: https://cdn.jsdelivr.net/gh/XPoet/image-hosting@master/common-use/avatar.jpg- name: 不知名艺术家  link: https://jinzhanqi.com/  description: love artist, love code.  avatar: https://s3.ax1x.com/2020/11/17/DVvkB4.jpg- ......  \n目录结构参考。\n\n\n平滑升级更新 Hexo 主题时，一般都会有这样的经历：先将主题目录下的 _config.yml 文件备份，更新完主题后，再将备份的数据复制粘贴还原回去。\n这个过程繁琐又浪费时间，因此我们需要一种友好的更新方式。如果你也经历着这样的痛苦，那么不妨尝试 Hexo 3.0 新增的功能 – 数据文件。\nKeep 主题利用该功能实现了平滑升级的特性，使用步骤如下：将主题目录下的 _config.yml 文件复制到博客根目录下的 /source/_data/ 中，并重命名为 keep.yml。如果 source 目录下没有 _data 文件夹请自行创建。\n\n这两个文件的关系为 keep.yml 覆盖 _config.yml，也就是说，想要修改配置时，只需要修改 keep.yml 里的即可（修改 _config.yml 里的不会生效）。这样就实现了平滑升级，更新 Keep 主题时 _config.yml （可能）会更新，而你的主题配置数据保留在 keep.yml 中。\n::: warning 注意主题更新后，如果主题目录下的 _config.yml 文件里出现了新的配置项，那么你必须从该文件中将它们复制到 /source/_data/keep.yml 中，并设置它们的值为你想要的选项。\n如果你使用了平滑升级这一特性，那么 /themes/keep/_config.yml 和 /source/_data/keep.yml 这两个文件里的选项没有同步，是更新主题后，启动报错的最主要的原因！:::\n有时候，同步 /themes/keep/_config.yml 和 /source/_data/keep.yml 两个配置文件里的内容也比较麻烦。因此，推荐使用代码对比工具进行查看，这样再进行同步就方便多了。例如 VS Code 自带的代码对比工具：\n::: warning 特别注意如果你升级了 Kepp 主题，主题配置文件 _config.yml 的 version 的值必须跟版本号保持一致！!\n例如：我将主题升级到 3.4.2 版本，那么主题配置文件 _config.yml 的 version 的值必须是 3.4.2 。如果你用了平滑升级，/source/_data/keep.yml 中的版本号需要你手动更改。\n# Keep versionversion: 3.4.2\n:::\n资源压缩Keep 主题的源码中，HTML、CSS、JavaScript、图片等资源文件是没有打包压缩的。绝大部分的 Hexo 主题也是如此。庆幸的是，可以找到相关的插件来解决这一问题。\n这里可以使用 hexo-all-minifier 插件，它集成了 html-minifier、clean-css、uglify 和 imagemin，只需安装和简单的配置即可使用。\n\n在 Hexo 项目根目录下安装 hexo-all-minifier。\n$ npm install hexo-all-minifier\n在 Hexo 配置文件 _config.yml 文件中，添加以下配置项：\nall_minifier: true\n如果你使用插件时遇到了问题或者想进行更详细的设置，请查看插件的文档。\n\n\n图床问题如果你在用 Hexo 等静态博客，正愁图片不知保存在哪里，那你可以试试 PicX。基于 GitHub API 开发的图床神器，图片外链使用 jsDelivr 进行 CDN 加速。\n免下载、免安装，打开网站即可直接使用。免费、稳定、高效。\n\nGitHub 仓库\n\nPicX 官网\n\n\n::: tip觉得好用就点个 Star 支持一下 ❤️:::\n自动部署Travis CI如何使用 Travis CI 自动部署 Hexo 博客\nGitHub Action如何使用 GitHub Actions 自动部署 Hexo 博客\n","categories":["keep"],"tags":["Hexo"]},{"title":"Hexo安装-keep主题-部署github-文档-离线版","url":"/1/","content":"转载声明本文档转载keep主题官方文档，稍加修改。官方文档 \n\n\n安装node.js安装git安装Hexo\n新建文件夹Hexo\n打开Hexo文件夹，在其内部鼠标右键打开Git Bash Here 并输入以下命令。npm install -g hexo-cli\n初始化Hexohexo init\nHexo命令hexo s       &#x2F;&#x2F; 启动hexo本地服务器，然后浏览器打开http:&#x2F;&#x2F;localhost:4000&#x2F;。就可以看到我们的博客。hexo clean   &#x2F;&#x2F; 清理缓存文件hexo g       &#x2F;&#x2F; 生成静态网页hexo d       &#x2F;&#x2F; 上传服务器ctrl+c       &#x2F;&#x2F; 关闭本地服务器\n\n把本地Hexo部署到GitHub\n首先登陆github网页\n\n\n点击头像左侧加号\nNew repository\nRepository name 输入：qiyiang0.github.io   //我的用户名换成你的。\n点击 create reapository\n\n\nHexo根目录右键打开git bash，然后输入下面命令：\ngithub账号git config --global user.name &quot;qiyiang0&quot;\ngithub邮箱git config --global user.email &quot;qiyiang0@gmail.com&quot;\n生成密钥SSH key命令ssh-keygen -t rsa -C &quot;qiyiang0@gmail.com&quot;\n查看密钥命令cat ~&#x2F;.ssh&#x2F;id_rsa.pub\n\n\n复制密钥，登陆github \n点击头像 \nsettings\nSSH and GPG keys \nNew SSH key \nTitle 随便写\nkey 粘贴SSH密钥\n\n\n输入命名查看是否连接成功 提示输入yes \n显示输出Hi qiyiang0! You’ve successfully authenticated, but GitHub does not provide shell access.代表成功\n\nssh -T git@github.com \n\n\n打开博客根目录配置文件_config.yml\ndeploy:  type: git  repository: https:&#x2F;&#x2F;github.com&#x2F;qiyiang0&#x2F;qiyiang0.github.io  branch: master\nHexo根目录右键打开git bash  输入以下命令。\nnpm i hexo-deployer-git\n\n安装主题git clone https:&#x2F;&#x2F;github.com&#x2F;XPoet&#x2F;hexo-theme-keep themes&#x2F;keep\n配置主题\n打开Hexo根目录_config.yml配置文件，修改主题为keep\n\ntheme: keep\n配置指南Keep 主题图文配置指南，左侧目录对应着主题配置文件 _config.yml 里面的配置项，方便查阅。\n基本信息：网站标题-作者昵称-网站域名base_info:  title: Keep Theme  author: Keep Team  url: \n\n请在该配置项里正确填写你网站的基本信息。\n\ntitle 网站标题（将显示在网站头部，如下图）\n\n\nauthor 作者昵称（将显示在网站底部和文章内容页，如下图）\n\n网站底部\n文章内容页\n\n\nurl 网站域名（将用于在文章内容页的版权信息模块正确拼接文章链接，如下图）\n\n\n配置网站的基本样式style:  # Theme primary color  primary_color: &quot;#0066CC&quot;  # Avatar (You can use local image or image external link)  avatar: /images/avatar.svg  # Favicon (You can use local image or image external link)  favicon: /images/logo.svg  # Article image align position, value: left | center  article_img_align: left  # Left side width  left_side_width: 260px  # Content area max width  content_max_width: 920px  # Mouse hover  hover:    shadow: true # shadow effect when the mouse hover    scale: true # scale effect when the mouse hover  # First screen  first_screen:    enable: true    background_img: /images/bg.svg # You can use local image or image external link    description: Keep writing and Keep loving.  # Scroll style settings  scroll:    progress_bar:      enable: true    percent:      enable: true\n\nstyle 该配置项用于配置网站的基本样式。\n设置网站主题色primary_color\n设置网站主题色，支持 rgb、rgba、十六进制等颜色格式，例如：rgb(0, 102, 204)、rgba(0, 102, 204, 0.8)、#0066cc。建议使用 Web 安全色。\n设置作者头像avatar\n设置作者头像，将显示在文章内容页，如下图。你可以使用本地图片（即存储 keep/source/images/ 路径下的图片）或图片外链 URL。写法参考：\n\n本地图片avatar: /images/avatar.svg\n图片外链avatar: common-use/avatar.jpg\n\n设置网站logofavicon\n设置网站 favicon 图标，你可以使用本地图片（即存储 keep/source/images/ 路径下的图片）或图片外链 URL。\n设置文章内容页的图片排列位置article_img_align\n设置文章内容页的图片排列位置，默认 left，可选：left（靠左）、center（居中）。\n设置左侧目录模块的宽度left_side_width\n设置左侧 TOC 目录模块的宽度。一般情况下，你无需修改。如需设置，请保持单位为 px。\n\n设置内容区域的最大宽度content_max_width\n设置内容区域的最大宽度。一般情况下，你无需修改。如需设置，请保持单位为 px。\n\n\n\n设置鼠标悬浮时的样式hover\n设置鼠标悬浮时的样式（主页文章块、TOC 目录块、按钮等模块），可分别开启 shadow 和 scale 效果。\n\nshadow 阴影效果\nscale 缩放效果\n\n开启主题首屏first_screen\nKeep 主题 v3.0.0 新增的首屏模块，开启后将显示在网站首页。\n\nenable 是否开启首屏\n\nbackground_img 首屏背景图片，可使用 本地图片 或 图片外链 URL\n\ndescription 首屏描述\n\n开启首屏的效果\n\n不开启首屏的效果\n\n\n设置页面滚动时的样式。scroll\n设置页面滚动时的样式。\n\nprogress_bar 页面滚动时在网站顶部显示滚动进度条\n\npercent 页面滚动时在网站右下角显示滚动百分比\n\n\n设置第三方社交链接social_contact:  enable: false  links:    github:               # your GitHub URL    weixin:               # your WeChat QR-Code URL    qq:                   # your QQ QR-Code URL    weibo:                # your WeiBo URL    zhihu:                # your ZhiHu URL    twitter:              # your twitter URL    facebook:             # your facebook URL    email:                # your email\n\n设置第三方社交链接。\n::: warning注意：social_contact 仅在首屏开启状态下才生效！:::\n\n如果要更改图标或添加其他第三方链接，例如：添加 Instagram\n\n在 Font Awesome 搜索 Instagram 图标。\n\n复制图标名（如上图），添加到主题配置文件 _config.yml 的 social_contact.links 配置项里面。\n\n\nsocial_contact:enable: falselinks:  instagram: https://www.instagram.com/xxxxxxxx\n\n\n导航menu:  Home: /  Archives: /archives  # Categories: /categories  # Tags: /tags  # Links: /links  # About: /about  # ...\n\n网站头部导航菜单，如需新增导航菜单，按上面格式填写，同时需要创建相对应的 Hexo 页面。\n\nHexo 项目并没有 categories（分类）、tags（标签）、about（关于）、links（友链）等页面，需要自己手动创建。\n以创建「 about（关于）」页面为例：\n\n在 Hexo 项目根目录下执行命令 hexo new page about ，即可在 source 目录下生成 about 文件夹。\n$ hexo new page about\n在 Keep 主题配置文件 _config.yml 的 menu 配置项下添加 about。\nmenu:  Home: /  Archives: /archives  # Categories: /categories  # Tags: /tags  # Links: /links  About: /about\n打开 Hexo 项目下 /source/about/index.md 文件，填写 adout 页面的内容。支持 Markdown 和 HTML 格式；  \n参考如下：\n---title: aboutdate: 2020-03-19 14:59:53comment: true---## About meXPoet「 Keep core developer 」............\n::: tipcomment: true 表示该页面开启评论功能。:::\n::: danger创建页面时自动生成的 title 属性不要修改！不要删除！例如：title: about 不能修改！不能删除！:::\n\n\n如果要实现在导航栏点击菜单时跳转到第三方网站，只需把配置项的值填写为第三方网站的 URL 即可。例如：在头部导航栏配置跳转到 BaiDu 网站的菜单\nmenu:  BaiDu: https://www.baidu.com/\n\n\n文章块底部的标签和分类信息显示home_article:  category:    enable: false     # show category in home page article block    limit: 3          # max number of categories shown in home page article block  tag:    enable: false     # show tags in home page article block    limit: 5          # max number of tags shown in home page article block\n该配置项用于设置首页文章块底部的标签和分类信息显示。\n\ncategory 文章分类\n\ntag 文章标签\n\nlimit 限制显示的个数\n\n效果图\n\n不开启效果\n\n开启效果\n\n\n\n\n设置是否显示文章字数统计、阅读时长和作者标识。post:  # Post word count  # Dependencies: hexo-wordcount (npm install hexo-wordcount)  # See: https://github.com/willin/hexo-wordcount  word_count:    enable: false    wordcount: false  # word count, one article    min2read: false   # time to read, one article  # Author label  author_label:    enable: true    auto: true  # if true, show Lv1, Lv2, Lv3... , If false, show custom label    # label array item can be one or more    custom_label_list: [ &quot;Trainee&quot;, &quot;Engineer&quot;, &quot;Architect&quot;, &quot;CTO&quot;, &quot;BOSS&quot; ]\n\n该配置项用于设置是否显示文章字数统计、阅读时长和作者标识。\nword_count如果要开启文章字数统计和阅读时长，需在 Hexo 项目根目录下安装依赖 hexo-wordcount。\nnpm install hexo-wordcount\n\n\nwordcount 文章字数统计\nmin2read 文章阅读时长\n\nauthor_label设置文章内容页的作者标识，目前有两种方案：\n\nauto 自动生成 Lv1、Lv2、Lv3 ……，判断依据为文章数量。\n\ncustom_label_list 自定义标识列表，数组项可以 一个 或 多个，匹配的依据是按文章数量。\n\n\n  格式参考：\n\n一个数组项 [&quot;前端鼓励师&quot;]\n多个数组项 [&quot;实习生&quot;, &quot;工程师&quot;, &quot;架构师&quot;]\n\n代码复制功能code_copy:  enable: true  style: default        # values: default | mac\n\n该配置项用于设置代码复制功能，开启后可一键复制代码到剪贴板。\n\nenable 是否开启。\n\nstyle 设置开启代码复制功能后代码块的样式，可选 default 和 mac。\n\ndefault 效果图\n\nmac 效果图\n\n\n\n\n目录功能toc:  enable: false  # Automatically add list number to toc.  number: false  # If true, all level of TOC in a post will be displayed, rather than the activated part of it.  expand_all: false  # If true, open TOC every time when you enter the article page  init_open: false\n\n该配置项用于设置文章TOC目录结构，非常实用的功能，可以快速查看文章目录结构和跳转，建议开启。\n\n\nnumber 给目录结构自动加上数字编号\n\nnumber: false\n\nnumber: true\n\n\n\nexpand_all 展开所有目录结构\n\nexpand_all: true 自动展开所有的目录结构\nexpand_all: false 边滚动页面边展开对应的位置的目录\n\n\ninit_open 打开文章页时是否自动打开 TOC 目录结构 \n\n\n显示文章版权信息copyright_info:  enable: true\n\n该配置项用于开启文章内容页的文章版权信息模块。\n\n设置网站计数website_count:  # busuanzi  # See: http://ibruce.info/2015/04/04/busuanzi/  busuanzi_count:    enable: false    site_uv: false    site_pv: false    page_pv: false\n\n该配置项用于设置网站计数，Keep 主题内置不蒜子计数，无需额外配置，直接选择你要开启的计数项即可。\n\nsite_uv 网站访问人数（显示在底部）\n\nsite_pv 网站总访问量（显示在底部）\n\npage_pv 文章阅读次数（显示在文章内容页）\n\n\n搜索功能local_search:  enable: false  preload: false     # Preload the search data when the page loads\n\n该配置项用于设置网站搜索功能，非常实用，建议开启。开启后，头部导航栏右侧将出现搜索按钮。\n\n搜索功能配置流程：\n\n在 Hexo 项目根目录下安装插件 hexo-generator-searchdb。\nnpm install hexo-generator-searchdb\n在 Hexo 配置文件 _config.yml 里添加如下配置项。\n# Search## See: https://github.com/theme-next/hexo-generator-searchdbsearch:  path: search.json  field: post  content: true  format: striptags\n主题配置搜索 \nlocal_search:  enable: true     preload: true\n:::enable 配置项的值设为 true。代表开启搜索。\npreload配置项的值设为 true。代表开启搜索。预加载搜索数据。:::\n\n\n全站文章搜索效果图：\n\n评论系统comment:  enable: false  use: valine  # values: valine | gitalk | twikoo  # Valine  # See: https://github.com/xCss/Valine  valine:    appid:                # your leancloud application appid    appkey:               # your leancloud application appkey    placeholder:          # your placeholder  # Gitalk  # See: https://github.com/gitalk/gitalk  gitalk:    github_id:             # GitHub repo owner    repository:            # Repository name to store issues    client_id:             # GitHub Application Client ID    client_secret:         # GitHub Application Client Secret  # Twikoo  # See: https://github.com/imaegoo/twikoo  twikoo:    env_id:                # Tencent Cloud environment id    region:                # environment region. If select Guangzhou, fill in &quot;ap-guangzhou&quot;.\n\n该配置项用于开启和设置主题的评论系统。\nuseuse: valine  # values: valine | gitalk | twikoo\n配置使用哪款评论系统。目前主题内置 Valine、Gitalk 和 Twikoo，你可以使用其他一款。\nValineValine 诞生于 2017 年 8 月 7 日，是一款基于 LeanCloud 的快速、简洁且高效的无后端评论系统。\n详情查看：\n\nhttps://github.com/xCss/Valine/\nhttps://valine.js.org/\n\n在 Keep 中如何使用：\n\n请先 登录 或 注册 LeanCloud，进入控制台后点击左下角创建应用。\n\n\n应用创建好以后，进入刚刚创建的应用，选择左下角的设置 &gt; 应用Key，然后就能看到你的 APP ID 和 APP Key 了。\n\n\n在 Keep 主题配置文件填写必要参数信息（APP ID、APP Key 等），示例如下。\nvaline:  appid: ih2nzxxxxxxxxxxxxxxxxxxxxxx  appkey: gdf6666666666666666666666666  placeholder: 😜 尽情吐槽吧~\n\n\nappid 必填。\nappkey 必填。\nplaceholder 可填，表示评论框的在还没输入内容时的显示的信息。\n\n\nValine 评论插件效果图。\n\n\n\nGitalkGitalk，一个基于 Github Issue 和 Preact 开发的评论插件。\n详情查看：\n\nhttps://github.com/gitalk/gitalk\nhttps://gitalk.github.io/\n\n在 Keep 中如何使用：\n\n新建 GitHub OAuth App注册或登录 GitHub，创建新的 OAuth App，其中 Homepage URL 和 Authorization callback URL 均填写自己的域名即可。\nOAuth App 创建成功后，把 Client ID 和 Client Secret 保存起来，下面要用到。\n\n\n新建 GitHub 仓库注册或登录 GitHub，创建一个新的仓库（repository），并打开 Issues（自己手动增加一个 Issue，内容随便填写，即可打开），用于存储评论内容。\n\n把自己的 GitHub 用户名、仓库名 、OAuth App 的 Client ID 、Client Secret 分别填写在主题配置文件里，如下示例。\ngitalk:  github_id: XPoet  repository: hexo-site-comments  client_id: cdfffffffffffffffffffff  client_secret: f4b55555555555555555555555555555\nGitalk 评论插件效果图。\n\n\nTwikooTwikoo，一个简洁、安全、免费的静态网站评论系统，基于腾讯云开发。\n详情查看：\n\nhttps://github.com/imaegoo/twikoo\nhttps://twikoo.js.org/\n\n在 Keep 中如何使用：\n如果您打算部署到一个现有的云开发环境，请直接从第 3 步开始。\n\n进入云开发CloudBase活动页面，滚动到“新用户专享”部分，选择适合的套餐（一般 0 元套餐即可），点击“立即购买”，按提示创建好环境。::: tip 提示\n\n\n推荐创建上海环境。如选择广州环境，需配置 region: ap-guangzhou\n环境名称自由填写\n推荐选择计费方式包年包月，套餐版本基础班 1，超出免费额度不会收费\n如果提示选择“应用模板”，请选择“空模板”:::\n\n\n进入云开发控制台\n\n进入环境-登录授权，启用“匿名登录”\n\n进入环境-安全配置，将网站域名添加到“WEB安全域名”\n\n进入环境-云函数，点击“新建云函数”\n\n函数名称请填写：twikoo，创建方式请选择：空白函数，运行环境请选择：Nodejs 10.15，函数内存请选择：128MB，点击“下一步”\n\n清空输入框中的示例代码，复制以下代码、粘贴到“函数代码”输入框中，点击“确定”\nexports.main = require(&#x27;twikoo-func&#x27;).main\n创建完成后，点击“twikoo”进入云函数详情页，进入“函数代码”标签，点击“文件 - 新建文件”，输入 package.json，回车\n\n复制以下代码、粘贴到代码框中，点击“保存并安装依赖”\n&#123; &quot;dependencies&quot;: &#123; &quot;twikoo-func&quot;: &quot;1.2.0&quot; &#125; &#125;\n在 Keep 主题配置文件里填写环境 ID env_id\ntwikoo:  env_id: xxxx-xxxx..........  region:  \n\n如果选择了广州环境，需把 region 的值填写为 ap-guangzhou，否则 region 为空即可。\ntwikoo:  region: ap-guangzhou\nTwikoo 评论插件效果图。\n\n\n\n订阅网站rss:  enable: false\n该配置项用于开启 RSS 订阅功能。\n开启流程：\n\n在 Hexo 项目根目录下安装插件 hexo-generator-feed。\nnpm install hexo-generator-feed\n在 Hexo 配置文件 _config.yml 增加如下配置项。\n# Feed Atom# npm install hexo-generator-feedfeed:  type: atom  path: atom.xml  limit: 20\n在 Keep 主题配置文件 _config.yml 开启 RSS。   \nrss:  enable: true\nRSS 订阅功能开启后，将会在右下角工具按钮组里面显示RSS 按钮。\n\n\n\n开启图片懒加载lazyload:  enable: false  ```  该配置项用于开启图片懒加载。  开启后，打开页面时不会加载所有图片，当视窗滚动到图片位置才加载对应的图片资源。效果图：![image](1/keep-docs/image.4xw0l2pjrbo0.png)::: tip当图片过多时，开启懒加载功能，能有效提高页面加载速度！:::## cdn   ```ymlcdn:  enable: false  ```  该配置项用于开启部分主题资源（JS 文件、字体文件等）的 CDN 加速功能。::: tip CDN 原理Keep 的 CDN 加速原理是使用 jsDelivr 来加速托管在 NPM 上的 [hexo-theme-keep](https://www.npmjs.com/package/hexo-theme-keep) 包的资源。:::- 如果你的 Hexo 博客部署在 **GitHub Pages**（服务器在国外），**建议**你开启 CDN，打开页面会有较快的加载速度。  - JS 资源 CDN    ![image](1/keep-docs/image.6y8hk0j82lk0.png)  - 字体文件 CDN    ![image](1/keep-docs/image.3jfuinu7t7o0.png)  - 如果博客部署在 **Gitee Pages**、**阿里云**、**腾讯云**等国内服务器，则**不建议**开启 CDN。## 开启主题的 PJAX 功能```ymlpjax:  enable: false  ```  该配置项用于开启主题的 PJAX 功能，带来单页应用的体验。::: tipPJAX 的工作原理是通过 Ajax 从服务器获取 HTML，并用 Ajax 请求得到 HTML 替换页面上容器的内容，然后使用 pushState 更新浏览器的当前 URL，而无需重新加载页面的布局或任何资源（JS，CSS），从而提供快速，完整页面加载的外观。但实际上它只是 Ajax 和 pushState。:::PJAX 开启后，点击页面跳转时，网页顶部会出现彩色进度条。## 设置网站底部的信息展示```ymlfooter:  since: 2020      # the starting year of your website, Can be null  icp:             # ICP record number of your website, Can be null\n\n该配置项用于设置网站底部的信息展示。\n\nsince 设置网站起始年份，可以为空。\nicp 设置网站 ICP 备案编号，可以为空。\n\n\n进阶使用创建页面Hexo 项目初始状态下并没有 categories（分类）、tags（标签）、links（友链）、about（关于）等页面，需要自己手动创建。\n以创建「about（关于）」页为例：\n\n在 Hexo 项目根目录下使用如下命令，即可创建 about 页面。\n$ hexo new page about\n创建成功后，打开 Hexo 项目根目录下 hexo/source/about/index.md 文件，即可填写 about 页面的内容。支持 Markdown 和 HTML 格式。\n::: tipcomment: true 表示该页面开启评论功能。:::\n参考如下示例：\n---title: aboutdate: 2020-03-19 14:59:53comment: true---# About me&lt;div style=&quot;color: red;&quot;&gt;About me&lt;/div&gt;\n在主题配置文件 _config.yml 中启用 about 导航菜单。\nmenu:  Home: /  About: /about  # ...\n\n其他页面的创建方式跟「about（关于）」页面类似，此处不再赘述。\n文章顶置要实现顶置的文章，需在文章页添加 sticky 属性，sticky 值越大，顶置的文章越靠前，参考如下。\n---title: Keep 主题使用指南date: 2020-04-07 21:55:14tags: [Hexo]categories: [Hexo]sticky: 999---\n\n\n数学公式如果要在文章中显示数学公式，可以使用插件 **hexo-filter-mathjax**。  \n配置流程：\n\n在 Hexo 项目根目录下安装插件 hexo-filter-mathjax。\n$ cd hexo-site$ npm install hexo-filter-mathjax\n在 Hexo 配置文件 _config.yml 增加如下配置。\nmathjax:  tags: none               # or &#x27;ams&#x27; or &#x27;all&#x27;  single_dollars: true     # enable single dollar signs as in-line math delimiters  cjk_width: 0.9           # relative CJK char width  normal_width: 0.6        # relative normal (monospace) width  append_css: true         # add CSS to every page  every_page: false        # if true, every page will be rendered by mathjax regardless the `mathjax` setting in Front-matter of each article\n在文章页添加 mathjax: true 属性，至此，就可以在该页面中写公式了。\n示例：\n---title: MathJax Testdate: 2020-09-12 16:02:07tags: MathJaxcategories: MathJaxmathjax: true---$$i\\hbar\\frac&#123;\\partial&#125;&#123;\\partial t&#125;\\psi=-\\frac&#123;\\hbar^2&#125;&#123;2m&#125;\\nabla^2\\psi+V\\psi$$\n\n效果图：\n\n\n友链样式Keep 主题对友链（links）页面进行了样式优化，你只需按如下教程，便可得到漂亮的友链列表，如下图。\n\n\n创建友链（links）页面，在你的 Hexo 项目根目录下使用如下命令即可自动创建。\n$ hexo new page links\n\n::: warning 注意source/links/index.md 文件的 title 属性不要修改！友链样式根据 title: links 来匹配！\n---title: linksdate: 2020-05-13 14:16:07---\n:::\n\n在 Keep 主题配置文件 _config.yml 的 menu 配置项里面启用 links。\nmenu:  Home: /  Links: /links  # ......\n在你的 Hexo 项目的 source 文件夹里增加 _data 文件夹。::: tip如果已经有了 _data 文件夹，则忽略这一步。:::\n\n在 _data 文件夹里新建 links.yml 文件。\n\n在 links.yml 文件里按如下格式增加你的友链。\n- name: XPoet  link: https://xpoet.cn/  description: 所有命运的馈赠，早已在暗中标好价格。  avatar: common-use/avatar.jpg- name: 不知名艺术家  link: https://jinzhanqi.com/  description: love artist, love code.  avatar: https://s3.ax1x.com/2020/11/17/DVvkB4.jpg- ......  \n目录结构参考。\n\n\n平滑升级更新 Hexo 主题时，一般都会有这样的经历：先将主题目录下的 _config.yml 文件备份，更新完主题后，再将备份的数据复制粘贴还原回去。\n这个过程繁琐又浪费时间，因此我们需要一种友好的更新方式。如果你也经历着这样的痛苦，那么不妨尝试 Hexo 3.0 新增的功能 – 数据文件。\nKeep 主题利用该功能实现了平滑升级的特性，使用步骤如下：将主题目录下的 _config.yml 文件复制到博客根目录下的 /source/_data/ 中，并重命名为 keep.yml。如果 source 目录下没有 _data 文件夹请自行创建。\n\n这两个文件的关系为 keep.yml 覆盖 _config.yml，也就是说，想要修改配置时，只需要修改 keep.yml 里的即可（修改 _config.yml 里的不会生效）。这样就实现了平滑升级，更新 Keep 主题时 _config.yml （可能）会更新，而你的主题配置数据保留在 keep.yml 中。\n::: warning 注意主题更新后，如果主题目录下的 _config.yml 文件里出现了新的配置项，那么你必须从该文件中将它们复制到 /source/_data/keep.yml 中，并设置它们的值为你想要的选项。\n如果你使用了平滑升级这一特性，那么 /themes/keep/_config.yml 和 /source/_data/keep.yml 这两个文件里的选项没有同步，是更新主题后，启动报错的最主要的原因！:::\n有时候，同步 /themes/keep/_config.yml 和 /source/_data/keep.yml 两个配置文件里的内容也比较麻烦。因此，推荐使用代码对比工具进行查看，这样再进行同步就方便多了。例如 VS Code 自带的代码对比工具：\n::: warning 特别注意如果你升级了 Kepp 主题，主题配置文件 _config.yml 的 version 的值必须跟版本号保持一致！!\n例如：我将主题升级到 3.4.2 版本，那么主题配置文件 _config.yml 的 version 的值必须是 3.4.2 。如果你用了平滑升级，/source/_data/keep.yml 中的版本号需要你手动更改。\n# Keep versionversion: 3.4.2\n:::\n资源压缩Keep 主题的源码中，HTML、CSS、JavaScript、图片等资源文件是没有打包压缩的。绝大部分的 Hexo 主题也是如此。庆幸的是，可以找到相关的插件来解决这一问题。\n这里可以使用 hexo-all-minifier 插件，它集成了 html-minifier、clean-css、uglify 和 imagemin，只需安装和简单的配置即可使用。\n\n在 Hexo 项目根目录下安装 hexo-all-minifier。\n$ npm install hexo-all-minifier\n在 Hexo 配置文件 _config.yml 文件中，添加以下配置项：\nall_minifier: true\n如果你使用插件时遇到了问题或者想进行更详细的设置，请查看插件的文档。\n\n\n图床问题如果你在用 Hexo 等静态博客，正愁图片不知保存在哪里，那你可以试试 PicX。基于 GitHub API 开发的图床神器，图片外链使用 jsDelivr 进行 CDN 加速。\n免下载、免安装，打开网站即可直接使用。免费、稳定、高效。\n\nGitHub 仓库\n\nPicX 官网\n\n\n::: tip觉得好用就点个 Star 支持一下 ❤️:::\n自动部署Travis CI如何使用 Travis CI 自动部署 Hexo 博客\nGitHub Action如何使用 GitHub Actions 自动部署 Hexo 博客\n","categories":["帮助文档"],"tags":["hexo","keep"]}]